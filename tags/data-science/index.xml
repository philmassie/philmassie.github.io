<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Science on kabelsalat</title>
    <link>https://philmassie.github.io/tags/data-science/</link>
    <description>Recent content in Data Science on kabelsalat</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>philmassie@webafrica.org.za (Philip Massie)</managingEditor>
    <webMaster>philmassie@webafrica.org.za (Philip Massie)</webMaster>
    <lastBuildDate>Fri, 11 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://philmassie.github.io/tags/data-science/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PU Learning</title>
      <link>https://philmassie.github.io/post/20190111/pu_learning/</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      <author>philmassie@webafrica.org.za (Philip Massie)</author>
      <guid>https://philmassie.github.io/post/20190111/pu_learning/</guid>
      <description>Introduction Disclaimer. not intended to be exhaustive and complete. Really just my notes but may be helpful to others. this post is based on this Fusilier et al. 2014 /cite Outline the problem in general.
previously I have used the approach, in a highly imbalanced dagta set, of randomly sampling from the unkowns and treating these as negatives. I freely admit that this is not exactly ideal, but out in the wild, with real-life deadlines, the approach &amp;ldquo;wasn&amp;rsquo;t the worst&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>